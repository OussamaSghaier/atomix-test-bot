syntax = "proto3";

package atomix.primitive.service;

import "google/protobuf/descriptor.proto";
import "atomix/primitive/operation.proto";

option java_package = "io.atomix.primitive.service.impl";
option java_outer_classname = "PrimitiveServiceProto";
option java_multiple_files = true;

extend google.protobuf.ServiceOptions {
    string name = 50001;
    ServiceTypeInfo type = 50002;
}

enum ServiceTypeInfo {
    SIMPLE = 0;
    SESSION = 1;
}

message ServiceOperationInfo {
    string name = 1;
    atomix.primitive.operation.OperationTypeInfo type = 2;
    bool async = 3;
}

extend google.protobuf.MethodOptions {
    ServiceOperationInfo operation = 50003;
}

message ServiceId {
    string type = 1;
    string name = 2;
}

message ServiceSnapshot {
    uint64 index = 1;
    bytes snapshot = 2;
}

// Simple service snapshot
message SimpleServiceSnapshot {
    int64 index = 4;
    int64 timestamp = 5;
}

// Service snapshot
message SessionManagedServiceSnapshot {
    int64 index = 4;
    int64 timestamp = 5;
    int64 delta = 6;
    repeated ServiceSession sessions = 7;
    bytes snapshot = 8;
}

// Service session
message ServiceSession {
    int64 session_id = 1;
    string member_id = 2;
    int64 timeout = 3;
    int64 timestamp = 4;
    int64 request_sequence = 5;
    int64 command_sequence = 6;
    int64 event_index = 7;
    int64 last_completed = 8;
    int64 last_applied = 9;
}

message ServiceRequest {
    ServiceId id = 1;
    oneof request {
        CreateRequest create = 2;
        DeleteRequest delete = 3;
        bytes command = 4;
        bytes query = 5;
    }
}

message ServiceResponse {
    oneof response {
        CreateResponse create = 1;
        DeleteResponse delete = 2;
        bytes command = 3;
        bytes query = 4;
    }
}

message CreateRequest {

}

message CreateResponse {

}

message DeleteRequest {

}

message DeleteResponse {

}

message CommandRequest {
    RequestContext context = 1;
    string name = 2;
    bytes command = 3;
}

message CommandResponse {
    ResponseContext context = 1;
    bytes output = 2;
}

message QueryRequest {
    RequestContext context = 1;
    string name = 2;
    bytes query = 3;
}

message QueryResponse {
    ResponseContext context = 1;
    bytes output = 2;
}

message RequestContext {
    uint64 index = 1;
}

message ResponseContext {
    uint64 index = 1;
}

message StreamResponse {
    StreamContext context = 1;
    bytes output = 2;
}
message StreamContext {
    uint64 index = 1;
}
